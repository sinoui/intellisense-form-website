"use strict";(self.webpackChunkintellisense_form_docs=self.webpackChunkintellisense_form_docs||[]).push([[772],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(t),d=a,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},60318:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var r=t(87462),a=t(63366),i=(t(67294),t(3905)),o=["components"],l={id:"guide-list-page-columns-config",title:"列表页展示项定制"},s=void 0,c={unversionedId:"guide-list-page-columns-config",id:"guide-list-page-columns-config",title:"列表页展示项定制",description:"这篇文章我们主要讲述如何通过插件动态的定制我们的列表中需要展示的列表项",source:"@site/docs/guide-list-page-columns-config.mdx",sourceDirName:".",slug:"/guide-list-page-columns-config",permalink:"/intellisense-form-website/docs/guide-list-page-columns-config",tags:[],version:"current",frontMatter:{id:"guide-list-page-columns-config",title:"列表页展示项定制"},sidebar:"someSidebar",previous:{title:"数据字典管理员",permalink:"/intellisense-form-website/docs/dictionary-manager"},next:{title:"定制列表数据转换",permalink:"/intellisense-form-website/docs/guide-list-page-transform-data"}},u=[{value:"如何在插件项目中使用",id:"如何在插件项目中使用",children:[{value:"声明配置文件",id:"声明配置文件",children:[],level:3},{value:"在插件入口文件中引入配置，使其生效",id:"在插件入口文件中引入配置使其生效",children:[],level:3}],level:2}],p={toc:u};function m(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"这篇文章我们主要讲述如何通过插件动态的定制我们的列表中需要展示的列表项"),(0,i.kt)("p",null,"需求："),(0,i.kt)("p",null,"现在有一个图书管理的列表页面，查询项中有一个",(0,i.kt)("inlineCode",{parentName:"p"},"图书状态"),"的查询条件，默认的列表展示项中没有",(0,i.kt)("inlineCode",{parentName:"p"},"借用状态"),"。如果",(0,i.kt)("inlineCode",{parentName:"p"},"图书状态"),"的查询条件为",(0,i.kt)("inlineCode",{parentName:"p"},"借用"),"时，需要在列表中增加一列标题为",(0,i.kt)("inlineCode",{parentName:"p"},"借用状态"),"的展示项。当一行数据中的图书借出状态为借用，且图书到期且未归还，这行数据对应的",(0,i.kt)("inlineCode",{parentName:"p"},"借用状态"),"列显示为红色图标，否则显示绿色图标。"),(0,i.kt)("h2",{id:"如何在插件项目中使用"},"如何在插件项目中使用"),(0,i.kt)("h3",{id:"声明配置文件"},"声明配置文件"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/plugins/extend/listPageConfig.tsx"',title:'"src/plugins/extend/listPageConfig.tsx"'},"import React from 'react';\nimport appSetting from '@sinoform/app-setting';\nimport Lens from '@sinoui/icons/Lens';\n\n// 校验查询条件中类型是否为借用\nconst checkSearchParams = (searchParams: any) => {\n  if (!searchParams.queryCriteriaItems) return false;\n\n  const queryCriteriaItems = JSON.parse(searchParams.queryCriteriaItems);\n\n  return queryCriteriaItems.some(\n    (item) => item.id === 'field_1' && item.value === '借用'\n  );\n};\n\nappSetting.listPageConfig.renderColumns({\n  type: 'ALL_PAGE',\n  formId: '*',\n  render: (columns: any, searchParams: any, currentUser: any) => {\n    // 类型为借用时，添加借用状态列\n    if (checkSearchParams(searchParams)) {\n      return [\n        ...columns.slice(0, columns.length - 1),\n        {\n          dataIndex: 'field_2',\n          title: '借用状态',\n          render: (value: any) => {\n            return value === '借出后到期且未归还' ? (\n              <Lens color=\"red\" />\n            ) : (\n              <Lens color=\"green\" />\n            );\n          },\n        },\n        ...columns.slice(columns.length - 1),\n      ];\n    }\n    return columns;\n  },\n});\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"}," renderColumns 参数说明 ")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"interface ListPageColumnConfig {\n  /**\n   * 指定页面的类型\n   *\n   * 固定支持的列表类型\n   * ```\n   * // 适用于草稿列表\n   * DRAFT_LIST_PAGE\n   *\n   * // 适用于待办列表\n   * TODO_LIST_PAGE\n   *\n   * // 适用于已办列表\n   * DONE_LIST_PAGE\n   *\n   * // 适用于查询列表\n   * SEARCH_LIST_PAGE\n   *\n   * // 适用于无流程列表\n   * NOFLOW_LIST_PAGE\n   *\n   * // 适用于所有列表\n   * ALL_PAGE\n   * ```\n   */\n  type: string;\n  /**\n   *  指定哪个表单中需要添加选择列，如果值为'*'表示适用于所有的表单\n   */\n  formId: string;\n\n  /**\n   * 生成新的列表项配置\n   *\n   * @param columns       初始的列表项配置\n   * @param searchParams  查询条件\n   * @param currentUser   当前用户\n   */\n  render(\n    columns: TableColumnType[],\n    searchParams: any,\n    currentUser: UserInfo\n  ): TableColumnType[];\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"}," 表单项配置说明 ")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"interface TableColumnType {\n  /**\n   * 主键\n   */\n  key?: string;\n  /**\n   * 表头名称\n   */\n  title?: React.ReactNode;\n  /**\n   * 列数据在数据项中对应的路径\n   */\n  dataIndex?: string;\n  /**\n   * 渲染单元格\n   */\n  render?: (cellValue: any, rowData: any, index: number) => React.ReactNode;\n}\n")),(0,i.kt)("h3",{id:"在插件入口文件中引入配置使其生效"},"在插件入口文件中引入配置，使其生效"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title='src/index.ts'",title:"'src/index.ts'"},"import './plugins/extend/listPageConfig.tsx';\n")))}m.isMDXComponent=!0}}]);