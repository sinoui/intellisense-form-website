"use strict";(self.webpackChunkintellisense_form_docs=self.webpackChunkintellisense_form_docs||[]).push([[2891],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return f}});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),s=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},p=function(e){var n=s(e.components);return t.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=s(r),f=o,d=u["".concat(c,".").concat(f)]||u[f]||m[f]||i;return r?t.createElement(d,l(l({ref:n},p),{},{components:r})):t.createElement(d,l({ref:n},p))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,l=new Array(i);l[0]=u;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var s=2;s<i;s++)l[s]=r[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},12688:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var t=r(87462),o=r(63366),i=(r(67294),r(3905)),l=["components"],a={id:"sinomatrix-docker-intellisenseform",title:"基于sinomatrix智能表单的docker部署"},c=void 0,s={unversionedId:"sinomatrix-docker-intellisenseform",id:"sinomatrix-docker-intellisenseform",title:"基于sinomatrix智能表单的docker部署",description:"智能表单 在docker-compose.yml中的配置详解",source:"@site/docs/sinomatrix-docker-intellisenseform.md",sourceDirName:".",slug:"/sinomatrix-docker-intellisenseform",permalink:"/intellisense-form-website/docs/sinomatrix-docker-intellisenseform",tags:[],version:"current",frontMatter:{id:"sinomatrix-docker-intellisenseform",title:"基于sinomatrix智能表单的docker部署"}},p=[{value:"智能表单 在docker-compose.yml中的配置详解",id:"智能表单-在docker-composeyml中的配置详解",children:[{value:"application-docker和环境变量的配合使用",id:"application-docker和环境变量的配合使用",children:[],level:3},{value:"启动",id:"启动",children:[],level:3},{value:"排查问题逻辑",id:"排查问题逻辑",children:[],level:3}],level:2}],m={toc:p};function u(e){var n=e.components,r=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"智能表单-在docker-composeyml中的配置详解"},"智能表单 在docker-compose.yml中的配置详解"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'bff:\n    image: sinomatrix/sinoform-bff:1.4.0\n    depends_on:\n      - mongodb\n    links: \n      - workflowdesign\n    ports: \n      - "8085:8085"\n    volumes:\n      - /usr/local/sino-matrix/bff/config/:/config/\n    environment:\n      mongodb.address: mongodb://mongodb:27017/form\n      uploadFile.path: /usr/local/uploadFile\n      SSOService: http://sso:8080/sso\n      workflowDesignUrl: http://workflowdesign:8081/workflowDesign\n      workflowUrl: http://workflow:18003/workflow\n      uiasUrl: http://uias:18001/uias\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"image: 采用的镜像名称以及版本 sinomatrix/sinoform-bff是名称 1.4.0是版本号。根据自己项目组的计划选择版本")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"depends_on： 依赖的容器是 mongodb容器,docker-compose里面必须定义了mongodb容器")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"links: 依赖的链接容器")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"ports：端口映射，实例中的配置是将主机的端口8085和bff容器的端口8085做了映射")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"volumes： 主机和容器目录挂载。主机的目录是/usr/local/sino-matrix/bff/config/ ,宿主机的目录是/config/"),(0,i.kt)("p",{parentName:"li"},"这样操作的目的是可以将springboot的配置文件外放。 因为在容器中执行的启动表单服务命令是在/根目录下，所以才这样映射")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"environment 环境变量配置  该配置 需要配合springboot的配置项来发挥作用。在docker中 运行智能表单，一般会使用application-docker这个配置文件。"))),(0,i.kt)("h3",{id:"application-docker和环境变量的配合使用"},"application-docker和环境变量的配合使用"),(0,i.kt)("p",null,"application-docker 关键点展示"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"url:\n  workflowDesignUrl:  ${workflowDesignUrl} #工作流设计器路径 \n  workflowUrl: ${workflowUrl} #工作流引擎路径 \n  uiasUrl:  ${uiasUrl} #统一授权管理系统路径 \n  resourceUrl: ${uiasUrl} #资源路径\n  syncWorkflowItemsUrl:\n")),(0,i.kt)("p",null,"yaml中的${workflowDesignUrl} 可以读取到environment 中的workflowDesignUrl内容。达到灵活配置的目的"),(0,i.kt)("h3",{id:"启动"},"启动"),(0,i.kt)("p",null,"在docker-compose编辑好的情况下，在docker-compose.yml "),(0,i.kt)("p",null,"使用命令 docker-compose up -d"),(0,i.kt)("h3",{id:"排查问题逻辑"},"排查问题逻辑"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"docker  ps -a 查看所有docker容器的运行状态"),(0,i.kt)("li",{parentName:"ol"},"如果有容器未启动。通过docker logs 容器id 查看报错信息"),(0,i.kt)("li",{parentName:"ol"},"如果需要进入容器里 可以使用命令 docker exec -it 容器id /bin/sh进入容器"),(0,i.kt)("li",{parentName:"ol"},"退出容器 可以使用 exit 命令")))}u.isMDXComponent=!0}}]);