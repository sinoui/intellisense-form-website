"use strict";(self.webpackChunkintellisense_form_docs=self.webpackChunkintellisense_form_docs||[]).push([[6635],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),f=o,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||i;return t?r.createElement(m,a(a({ref:n},p),{},{components:t})):r.createElement(m,a({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},31825:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),a=["components"],s={id:"dep-spring-cloud-gateway",title:"与 spring-cloud-gateway 集成"},l=void 0,c={unversionedId:"dep-k8s/dep-spring-cloud-gateway",id:"dep-k8s/dep-spring-cloud-gateway",title:"与 spring-cloud-gateway 集成",description:"如果您将智能表单部署在 kubernetes 中，然后又希望通过 spring-cloud-gateway 做统一网关处理，那么可以使用以下配置：",source:"@site/docs/dep-k8s/5-dep-spring-cloud-gateway.md",sourceDirName:"dep-k8s",slug:"/dep-k8s/dep-spring-cloud-gateway",permalink:"/intellisense-form-website/docs/dep-k8s/dep-spring-cloud-gateway",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"dep-spring-cloud-gateway",title:"与 spring-cloud-gateway 集成"},sidebar:"someSidebar",previous:{title:"部署 mongodb 集群（手动）",permalink:"/intellisense-form-website/docs/dep-k8s/mongo-cluster-k8s"},next:{title:"项目组自定义配置",permalink:"/intellisense-form-website/docs/config-custom"}},p=[],u={toc:p};function d(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"如果您将智能表单部署在 kubernetes 中，然后又希望通过 spring-cloud-gateway 做统一网关处理，那么可以使用以下配置："),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{7,12}","{7,12}":!0},"spring:\n  cloud:\n    gateway:\n      routes:\n        - # 智能表单后端服务\n          id: sinoform_backend_route\n          uri: http://sinoform-backend:8080\n          predicates:\n            - Path=/apis/intellisense-form\n        - # 智能表单前端\n          id: sinoform_frontend_route\n          uri: http://sinoformweb\n          predicates:\n            - Path=/intellisense-form, /intellisense-form-mobile, /intellisense-form-manager\n")),(0,i.kt)("p",null,"其中 ",(0,i.kt)("inlineCode",{parentName:"p"},"http://sinoform-backend:8080")," 和 ",(0,i.kt)("inlineCode",{parentName:"p"},"http://sinoformweb")," 是智能表单后端和前端的服务名称对应的域名（域名与服务名称保持一致）。如果spring-cloud-gateway与智能表单部署在不同的命名空间中，则域名中需要添加上智能表单的命名空间。例如，假设智能表单部署在 ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," 命名空间中，则配置如下："),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{7,12}","{7,12}":!0},"spring:\n  cloud:\n    gateway:\n      routes:\n        - # 智能表单后端服务\n          id: sinoform_backend_route\n          uri: http://sinoform-backend.default:8080\n          predicates:\n            - Path=/apis/intellisense-form\n        - # 智能表单前端\n          id: sinoform_frontend_route\n          uri: http://sinoformweb.default\n          predicates:\n            - Path=/intellisense-form, /intellisense-form-mobile, /intellisense-form-manager\n")))}d.isMDXComponent=!0}}]);