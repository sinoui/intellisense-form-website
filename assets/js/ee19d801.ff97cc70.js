"use strict";(self.webpackChunkintellisense_form_docs=self.webpackChunkintellisense_form_docs||[]).push([[6815],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),i=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=i(e.components);return r.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=i(t),d=a,f=p["".concat(c,".").concat(d)]||p[d]||m[d]||o;return t?r.createElement(f,l(l({ref:n},u),{},{components:t})):r.createElement(f,l({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=p;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var i=2;i<o;i++)l[i]=t[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},64476:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return i},toc:function(){return u},default:function(){return p}});var r=t(87462),a=t(63366),o=(t(67294),t(3905)),l=["components"],s={id:"guide-custom-list-search-layout",title:"列表查询区域布局"},c=void 0,i={unversionedId:"guide-custom-list-search-layout",id:"guide-custom-list-search-layout",title:"列表查询区域布局",description:"支持版本：v1.15.0",source:"@site/docs/guide-custom-list-search-layout.mdx",sourceDirName:".",slug:"/guide-custom-list-search-layout",permalink:"/intellisense-form-website/docs/guide-custom-list-search-layout",tags:[],version:"current",frontMatter:{id:"guide-custom-list-search-layout",title:"列表查询区域布局"},sidebar:"someSidebar",previous:{title:"字段属性配置面板",permalink:"/intellisense-form-website/docs/plugin-field-config-panel"},next:{title:"定制可全局替换的UI组件",permalink:"/intellisense-form-website/docs/guide-global-ui"}},u=[{value:"添加布局组件",id:"添加布局组件",children:[],level:2},{value:"注册布局组件",id:"注册布局组件",children:[],level:2},{value:"注册到智能表单",id:"注册到智能表单",children:[],level:2}],m={toc:u};function p(e){var n=e.components,s=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},m,s,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"支持版本：v1.15.0")),(0,o.kt)("p",null,"智能表单从 v1.15.0 版本开始，支持定制列表查询区域的布局。当前，如果是定制化的查询条件，表单默认的查询区域布局为收缩状态，可点击展开查询区域。"),(0,o.kt)("p",null,"如果目前的支持方式不能满足我们的需求，比如如果查询条件不超过两行，我们可以默认展开显示；如果查询条件超过两行，则默认展示前两行，后面的查询条件隐藏，通过点击展开按钮，可展示所有查询条件。此时我们就需要通过自己添加布局组件的方式对查询区域布局进行定制。"),(0,o.kt)("h2",{id:"添加布局组件"},"添加布局组件"),(0,o.kt)("p",null,"查询区域布局组件主要包括三个组件："),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"SearchListPageSearchPanel 流程表单列表页查询区域布局组件"),(0,o.kt)("li",{parentName:"ul"},"NoFlowListPageSearchPanel 无流程表单列表查询区域布局组件。可以与",(0,o.kt)("inlineCode",{parentName:"li"},"SearchListPageSearchPanel"),"使用同一个布局组件"),(0,o.kt)("li",{parentName:"ul"},"CustomSearchFormLayout 查询区域查询表单布局组件")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/plugins/custom-list-search-layout/SearchPanel.tsx"',title:'"src/plugins/custom-list-search-layout/SearchPanel.tsx"'},'import { Button } from "@sinoui/core";\nimport type { CustomQuery } from "@sinoform/types";\nimport Body2 from "@sinoui/core/Body2";\nimport React, { useEffect, useState } from "react";\nimport styled from "styled-components";\n\nconst SearchPanelHeader = styled.div`\n  display: flex;\n  padding: 10px 16px;\n  justify-content: space-between;\n  align-items: center;\n  color: white;\n  cursor: pointer;\n  user-select: none;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.38);\n  margin-bottom: 8px;\n`;\n\nconst SearchPanelLayout = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);\n  align-self: flex-start;\n  background-color: white;\n`;\n\n/**\n * 查询区域展开收缩状态上下文\n */\nconst ExpandContext = React.createContext<boolean | null>(null);\n\n/**\n * 获取查询项占用的行数\n */\nfunction getFormItemRowCount(formItems: CustomQuery[]) {\n  const width = formItems.reduce(\n    (acc, item) => acc + parseInt(item.width ?? "8", 10),\n    0\n  );\n  return Math.ceil(width / 24);\n}\n\nexport default function SearchPanel({\n  children,\n  searchItems = [],\n}: {\n  children: React.ReactChildren;\n  searchItems: CustomQuery[];\n}) {\n  // 默认非展开状态\n  const [expand, setExpand] = useState(false);\n  const total = getFormItemRowCount(searchItems);\n\n  const handleClick = () => {\n    setExpand(!expand);\n  };\n\n  // 如果查询条件总数超过两行，则展示收缩按钮\n  return (\n    <SearchPanelLayout>\n      <ExpandContext.Provider value={expand}>\n        <SearchPanelHeader>\n          <Body2>筛选查询</Body2>\n          {total > 2 && (\n            <Button onClick={handleClick}>{expand ? "收缩" : "展开"}</Button>\n          )}\n        </SearchPanelHeader>\n        {children}\n      </ExpandContext.Provider>\n    </SearchPanelLayout>\n  );\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/plugins/custom-list-search-layout/CustomSearchFormLayout.tsx"',title:'"src/plugins/custom-list-search-layout/CustomSearchFormLayout.tsx"'},'import React from "react";\nimport useExpandedContext from "./useExpandedContext";\n\ninterface ColumnProps {\n  /**\n   * 在小于 600px 宽度屏幕下的宽度尺寸占比,如果只指定 xs，则是所有尺寸下的占比\n   */\n  xs?: number;\n  /**\n   * 在[600px, 960px)屏幕下的宽度尺寸占比\n   */\n  sm?: number;\n  /**\n   * 在[960px, 1280px)屏幕下的宽度尺寸占比比\n   */\n  md?: number;\n  /**\n   * 在[1280px, 1920px)屏幕下的宽度尺寸占比\n   */\n  lg?: number;\n  /**\n   * 在 >=1920px 屏幕下的宽度尺寸占比\n   */\n  xl?: number;\n  /**\n   * 是否启用 flex 布局\n   */\n  flexContainer?: boolean;\n  /**\n   * 主轴上的对齐方式\n   */\n  justifyContent?:\n    | "flex-start"\n    | "flex-end"\n    | "center"\n    | "space-around"\n    | "space-between";\n  /**\n   * 交叉轴上的对齐方式\n   */\n  alignItems?: "flex-start" | "flex-end" | "center";\n  /**\n   * 自定义样式名称\n   */\n  className?: string;\n}\n\ninterface Props {\n  children: React.ReactElement<ColumnProps>[];\n}\n\n/**\n * 获取前两行查询项\n *\n * @param formItems 查询项\n */\nconst getTopRowsFormItems = (formItems: React.ReactElement<ColumnProps>[]) => {\n  let currentRow = 0;\n  let remainSpace = 24;\n\n  return formItems.filter((formItem) => {\n    const space = formItem.props.xs ?? 8;\n\n    if (remainSpace >= space) {\n      remainSpace -= space;\n    } else {\n      currentRow++;\n      remainSpace = 24 - space;\n    }\n\n    return remainSpace >= 0 && currentRow <= 1;\n  });\n};\n\nconst CustomSearchFormLayout: React.FC<Props> = ({ children }) => {\n  const expanded = useExpandedContext();\n\n  // 如果是展开状态，则显示所有查询项；如果不是展开状态，则显示前两行的查询条件\n  const visibleFormItems = expanded ? children : getTopRowsFormItems(children);\n\n  return <>{visibleFormItems}</>;\n};\n\nexport default CustomSearchFormLayout;\n')),(0,o.kt)("h2",{id:"注册布局组件"},"注册布局组件"),(0,o.kt)("p",null,"将上述组件注册到",(0,o.kt)("inlineCode",{parentName:"p"},"AppSetting.theme"),"中。"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/plugins/custom-list-search-layout/index.ts"',title:'"src/plugins/custom-list-search-layout/index.ts"'},'import appSetting from "@sinoform/app-setting";\nimport CustomSearchFormLayout from "./CustomSearchFormLayout";\nimport SearchPanel from "./SearchPanel";\n\nappSetting.theme = {\n  SearchListPageSearchPanel: SearchPanel,\n  NoFlowListPageSearchPanel: SearchPanel,\n  CustomSearchFormLayout: CustomSearchFormLayout,\n};\n')),(0,o.kt)("h2",{id:"注册到智能表单"},"注册到智能表单"),(0,o.kt)("p",null,"在插件项目的入口文件处引入注册布局组件的文件即可将组件注册到智能表单中。"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/index.ts"',title:'"src/index.ts"'},'import "./plugins/custom-list-search-layout";\n')),(0,o.kt)("p",null,"登入智能表单查看效果如下："),(0,o.kt)("p",null,"默认状态：\n",(0,o.kt)("img",{alt:"默认状态",src:t(62243).Z})),(0,o.kt)("p",null,"展开状态：\n",(0,o.kt)("img",{alt:"展开状态",src:t(68571).Z})))}p.isMDXComponent=!0},68571:function(e,n,t){n.Z=t.p+"assets/images/list-search-layout-expanded-f6b817b5f1c32f72cb9ae42d9f0e2136.png"},62243:function(e,n,t){n.Z=t.p+"assets/images/list-search-layout-bb5543e2d24348900fc03aef20402ac4.png"}}]);