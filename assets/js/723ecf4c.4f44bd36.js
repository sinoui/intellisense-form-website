"use strict";(self.webpackChunkintellisense_form_docs=self.webpackChunkintellisense_form_docs||[]).push([[1538],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return f}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=p(n),f=i,d=u["".concat(s,".").concat(f)]||u[f]||c[f]||l;return n?r.createElement(d,a(a({ref:t},m),{},{components:n})):r.createElement(d,a({ref:t},m))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,a=new Array(l);a[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var p=2;p<l;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},99955:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return m},default:function(){return u}});var r=n(87462),i=n(63366),l=(n(67294),n(3905)),a=["components"],o={id:"sinoform-import",title:"业务数据导入"},s=void 0,p={unversionedId:"sinoform-import",id:"sinoform-import",title:"业务数据导入",description:"业务数据导入功能是通过读取 excel 文件来批量生成或更新表单数据。@sinoform/helper-import-excel模块提供了一整套 excel 解析、数据处理、业务数据导入的功能。",source:"@site/docs/sinofrom-import.md",sourceDirName:".",slug:"/sinoform-import",permalink:"/intellisense-form-website/docs/sinoform-import",tags:[],version:"current",frontMatter:{id:"sinoform-import",title:"业务数据导入"},sidebar:"someSidebar",previous:{title:"智能表单配置数据整体迁移",permalink:"/intellisense-form-website/docs/sinofrom-sinomatrix-import-export"},next:{title:"附件预览功能",permalink:"/intellisense-form-website/docs/config-file-online-preview"}},m=[{value:"@sinoform/helper-import-excel 模块",id:"sinoformhelper-import-excel-模块",children:[{value:"parseImportExcel",id:"parseimportexcel",children:[],level:3},{value:"transformExcelColumns",id:"transformexcelcolumns",children:[],level:3},{value:"importDataList",id:"importdatalist",children:[],level:3}],level:2},{value:"如何创建定制导入按钮",id:"如何创建定制导入按钮",children:[],level:2},{value:"excel 解析场景",id:"excel-解析场景",children:[{value:"场景一：主表单数据与子表单数据在不同的 sheet 页中",id:"场景一主表单数据与子表单数据在不同的-sheet-页中",children:[],level:3},{value:"场景二：主表单与子表单在同一个 sheet 页中，子表单项的值在一列中，以逗号分开",id:"场景二主表单与子表单在同一个-sheet-页中子表单项的值在一列中以逗号分开",children:[],level:3},{value:"场景三：主表单与子表单在同一个 sheet 页中，子表单数据在数据行平铺延展",id:"场景三主表单与子表单在同一个-sheet-页中子表单数据在数据行平铺延展",children:[],level:3}],level:2}],c={toc:m};function u(e){var t=e.components,o=(0,i.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"业务数据导入功能是通过读取 excel 文件来批量生成或更新表单数据。",(0,l.kt)("inlineCode",{parentName:"p"},"@sinoform/helper-import-excel"),"模块提供了一整套 excel 解析、数据处理、业务数据导入的功能。"),(0,l.kt)("p",null,"下面我们先了解一下",(0,l.kt)("inlineCode",{parentName:"p"},"@sinoform/helper-import-excel"),"模块的方法，然后分几个场景来演示如何导入业务数据。"),(0,l.kt)("h2",{id:"sinoformhelper-import-excel-模块"},"@sinoform/helper-import-excel 模块"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"@sinoform/helper-import-excel")," 模块提供了",(0,l.kt)("inlineCode",{parentName:"p"},"parseImportExcel"),"、",(0,l.kt)("inlineCode",{parentName:"p"},"transformExcelColumns"),"、",(0,l.kt)("inlineCode",{parentName:"p"},"importDataList"),"几个方法来分别实现 excel 解析、数据处理、业务数据导入的功能。"),(0,l.kt)("h3",{id:"parseimportexcel"},"parseImportExcel"),(0,l.kt)("p",null,"解析 excel 并生成",(0,l.kt)("inlineCode",{parentName:"p"},"dataList"),"（列表数据）和",(0,l.kt)("inlineCode",{parentName:"p"},"columns"),"（表头信息）。此方法接受如下几个参数："),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"file。 要解析的 Excel 文件，文件 Blob 对象"),(0,l.kt)("li",{parentName:"ul"},"formDesign。 表单设计配置信息。excel 解析是通过表头与表单项配置中的 title 对应来匹配该列是什么字段"),(0,l.kt)("li",{parentName:"ul"},"isDataInOneSheet。 主表单和子表单数据是否在一个 sheet 页中。默认为 true"),(0,l.kt)("li",{parentName:"ul"},"titleRow。 主表单所在 sheet 页中的标题所在行。默认为 1（excel 中第一行为 1）")),(0,l.kt)("p",null,"此方法可以处理 ",(0,l.kt)("a",{parentName:"p",href:"#excel-%E8%A7%A3%E6%9E%90%E5%9C%BA%E6%99%AF"},"excel-解析场景")," 中的 excel 数据，并通过 isDataInOneSheet 来判断应该来使用何种方式来解析数据。其中场景一 isDataInOneSheet 为 false，其余的两个场景均为 true"),(0,l.kt)("h3",{id:"transformexcelcolumns"},"transformExcelColumns"),(0,l.kt)("p",null,"将 dataList 中的标题转换成 fieldName，返回处理后的 dataList。"),(0,l.kt)("p",null,"此方法接受两个参数："),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"dataList。 列表数据"),(0,l.kt)("li",{parentName:"ul"},"columns。 标题配置")),(0,l.kt)("h3",{id:"importdatalist"},"importDataList"),(0,l.kt)("p",null,"批量导入处理后的 excel 数据，如果表单数据中存在 id，则更新对应的表单值，否则新建表单。"),(0,l.kt)("p",null,"此方法接受如下参数："),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"dataList。 Excel 解析后的数据列表"),(0,l.kt)("li",{parentName:"ul"},"columns。 列表的表头"),(0,l.kt)("li",{parentName:"ul"},"formDesign。 表单设计"),(0,l.kt)("li",{parentName:"ul"},"currentUser。 当前登录人")),(0,l.kt)("p",null,"通过上述方法说明，我们可以发现这其实是将导入的三个步骤封装成三个独立的方法，插件项目中，我们只需要将这三个方法按照顺序调用就可以完成数据导入的功能。这样实现还有一个好处就是，我们可以在这三个方法中间添加我们自己的数据处理方法，来满足一些特定的业务场景或数据处理。"),(0,l.kt)("p",null,"下面我们将演示如何创建一个导入按钮，并处理一些特殊的业务场景"),(0,l.kt)("h2",{id:"如何创建定制导入按钮"},"如何创建定制导入按钮"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"新建定制导入按钮")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=src/plugins/custom-import-button/index.tsx",title:"src/plugins/custom-import-button/index.tsx"},"import { useApp, useFormApp } from '@sinoform/app-core';\nimport {\n  parseImportExcel,\n  transformExcelColumns,\n  importDataList,\n} from '@sinoform/helper-import-excel';\nimport Button from '@sinoui/core/Button';\nimport React from 'react';\n\nexport default function ImportExcelButton() {\n  const { formDesignSetting } = useFormApp();\n  const { currentUser } = useApp();\n\n  const handleChange = async () => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    const { dataList, columns } = await parseImportExcel(\n      file,\n      formDesignSetting,\n      true,\n      1\n    );\n\n    const result = transformExcelColumns(dataList, columns);\n\n    await importDataList(result, columns, formDesign, userInfo);\n  };\n  return (\n    <input\n      type=\"file\"\n      accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n      onChange={handleChange}\n    />\n  );\n}\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"在列表页中添加导入按钮")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=src/index.ts",title:"src/index.ts"},"import appSetting from '@sinoform/app-setting';\nimport React from 'react';\n\nappSetting.listPageConfig.addButton({\n  type: 'DRAFT_LIST_PAGE',\n  formId: 'XXX', // 需要替换成真实的表单设计id，此处xxx代指任意id\n  render: React.lazy(() => import('src/plugins/custom-import-button')),\n  pos: 'right',\n  availability: () => true,\n});\n")),(0,l.kt)("p",null,"这样简单几行代码，我们就为表单 id 为'XXXX'的草稿页添加了一个导入按钮。"),(0,l.kt)("p",null,"但是有些场景中，我们就需要对导入的数据进行一定的处理。比如下方这张 excel 表中的数据："),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(41538).Z})),(0,l.kt)("p",null,"这个 excel 数据中有两处地方需要我们处理："),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"数据以风险事件说明、风险编号列为准，需要该列删除空白的行，并将业务/管理条线、业务活动/管理领域、业务/管理流程这些数据需要补充到对应行中"),(0,l.kt)("li",{parentName:"ul"},"风险编号对应的是两个字段，且两个字段以空格分开")),(0,l.kt)("p",null,"接下来我们改造一下",(0,l.kt)("inlineCode",{parentName:"p"},"handleChange"),"方法，以满足数据的要求"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=src/plugins/custom-import-button/index.tsx",title:"src/plugins/custom-import-button/index.tsx"},"/**\n * 数据转换方法\n */\nconst transformDataList = (dataList: any) => {\n  let A, B, C;\n\n  // 1. 处理A、B、C三列数据，过滤D、E列的空白数据\n  const filterDatas = dataList\n    .map((item) => {\n      A = item.A || A;\n      B = item.B || B;\n      C = item.C || C;\n\n      if (item.D) {\n        return {\n          ...item,\n          A,\n          B,\n          C,\n        };\n      }\n\n      return undefined;\n    })\n    .filter(Boolean);\n\n  // 2. 拆分E列，并将拆分后的数据直接赋值给对应的表单项\n  const ans = filterData.map((item) => {\n    if (item.E) {\n      const [field_10, field_11] = item.E.split(/ +/);\n      return {\n        ...item,\n        field_10,\n        field_11,\n      };\n    }\n    return item;\n  });\n\n  return ans;\n};\n\nconst handleChange = async () => {\n  const file = e.target.files?.[0];\n  if (!file) return;\n\n  let { dataList, columns } = await parseImportExcel(file, formDesignSetting);\n\n  dataList = transformDataList(dataList);\n\n  const result = transformExcelColumns(dataList, columns);\n\n  await importDataList(result, columns, formDesign, userInfo);\n};\n")),(0,l.kt)("h2",{id:"excel-解析场景"},"excel 解析场景"),(0,l.kt)("h3",{id:"场景一主表单数据与子表单数据在不同的-sheet-页中"},"场景一：主表单数据与子表单数据在不同的 sheet 页中"),(0,l.kt)("p",null,"主表单数据 sheet 页：\n",(0,l.kt)("img",{src:n(1329).Z})),(0,l.kt)("p",null,"子表单数据 sheet 页：\n",(0,l.kt)("img",{src:n(14812).Z})),(0,l.kt)("p",null,"这种场景中，为了保证子表单数据能与主表单数据对应的起来，需要对 excel 模板做一些限定："),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"第一个 sheet 页为主表单数据， 每一行代表一条表单数据，其他 sheet 页为子表单数据页。"),(0,l.kt)("li",{parentName:"ul"},"第一个 sheet 页的第一列必须是数据的编号，此编号必须是唯一的。"),(0,l.kt)("li",{parentName:"ul"},"子表单数据 sheet 页的名称必须与表单设计中的子表单项名称一致。"),(0,l.kt)("li",{parentName:"ul"},"子表单数据 sheet 页的第一列必须是所属主表单的编号，用于表示该条子表单数据属于哪一条主表单数据。")),(0,l.kt)("h3",{id:"场景二主表单与子表单在同一个-sheet-页中子表单项的值在一列中以逗号分开"},"场景二：主表单与子表单在同一个 sheet 页中，子表单项的值在一列中，以逗号分开"),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(9927).Z})),(0,l.kt)("h3",{id:"场景三主表单与子表单在同一个-sheet-页中子表单数据在数据行平铺延展"},"场景三：主表单与子表单在同一个 sheet 页中，子表单数据在数据行平铺延展"),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(62351).Z})))}u.isMDXComponent=!0},1329:function(e,t,n){t.Z=n.p+"assets/images/import-excel-type-1_main-7f7c2d7ae0be4d786cc257911fe7eee2.png"},14812:function(e,t,n){t.Z=n.p+"assets/images/import-excel-type-1_subform-5b2a35bc459b091c5289d8e7e3d4eb63.png"},9927:function(e,t,n){t.Z=n.p+"assets/images/import-excel-type-2-afe35bd8ea682b695d45aabc78af16fd.png"},62351:function(e,t,n){t.Z=n.p+"assets/images/import-excel-type-3-95da3dd217a36386f0a5eab2a1ad2dee.png"},41538:function(e,t,n){t.Z=n.p+"assets/images/parse-import-column-b8bd39801aee23af2567ec2e2176ca3d.png"}}]);