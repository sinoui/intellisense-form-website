"use strict";(self.webpackChunkintellisense_form_docs=self.webpackChunkintellisense_form_docs||[]).push([[8451],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return k}});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=m(n),k=l,c=s["".concat(p,".").concat(k)]||s[k]||d[k]||r;return n?a.createElement(c,i(i({ref:t},u),{},{components:n})):a.createElement(c,i({ref:t},u))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=s;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var m=2;m<r;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},13505:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return u},default:function(){return s}});var a=n(87462),l=n(63366),r=(n(67294),n(3905)),i=["components"],o={id:"guide-global-ui",title:"定制可全局替换的UI组件"},p=void 0,m={unversionedId:"guide-global-ui",id:"guide-global-ui",title:"定制可全局替换的UI组件",description:"智能表单目前支持的可全局替换的基础 UI 组件主要是以下两种模式的弹窗组件：",source:"@site/docs/guide-global-ui.mdx",sourceDirName:".",slug:"/guide-global-ui",permalink:"/intellisense-form-website/docs/guide-global-ui",tags:[],version:"current",frontMatter:{id:"guide-global-ui",title:"定制可全局替换的UI组件"},sidebar:"someSidebar",previous:{title:"列表查询区域布局",permalink:"/intellisense-form-website/docs/guide-custom-list-search-layout"},next:{title:"定制表单样式",permalink:"/intellisense-form-website/docs/guide-form-style"}},u=[{value:"组件开发",id:"组件开发",children:[{value:"Confirm",id:"confirm",children:[{value:"可用属性",id:"可用属性",children:[],level:4}],level:3},{value:"message",id:"message",children:[{value:"message 特性",id:"message-特性",children:[{value:"message 支持不同类型的提示",id:"message-支持不同类型的提示",children:[],level:5},{value:"自定义 loading 关闭",id:"自定义-loading-关闭",children:[],level:5},{value:"设置消息显示时长",id:"设置消息显示时长",children:[],level:5},{value:"设置消息显示最大条数",id:"设置消息显示最大条数",children:[],level:5},{value:"主题切换",id:"主题切换",children:[],level:5}],level:4}],level:3}],level:2},{value:"注册组件",id:"注册组件",children:[],level:2},{value:"组件验证",id:"组件验证",children:[],level:2}],d={toc:u};function s(e){var t=e.components,o=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"智能表单目前支持的可全局替换的基础 UI 组件主要是以下两种模式的弹窗组件："),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Confirm —— 确认弹窗。主要用在一些不可逆操作前的提示。"),(0,r.kt)("li",{parentName:"ul"},"message —— 提示弹窗。主要用于操作提示，比如",(0,r.kt)("inlineCode",{parentName:"li"},"加载中……"),"，",(0,r.kt)("inlineCode",{parentName:"li"},"操作成功"),"等。")),(0,r.kt)("p",null,"上述两种场景的弹窗在智能表单中以不同形式展现，如果有统一风格需求的，则需要以插件的形式开发这两个组件，然后注册到智能表单中使用。"),(0,r.kt)("h2",{id:"组件开发"},"组件开发"),(0,r.kt)("p",null,"关于弹窗组件的开发，我们不做特殊要求，只要能够接收以下描述中的组件属性，符合其使用方式即可。"),(0,r.kt)("h3",{id:"confirm"},"Confirm"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Confirm"),"组件主要用于一些不可逆操作前的确认提示，比如",(0,r.kt)("inlineCode",{parentName:"p"},"删除"),"、",(0,r.kt)("inlineCode",{parentName:"p"},"办结"),"等。"),(0,r.kt)("p",null,"基本使用"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'<Confirm\n  message="如删除该字段，其对应的表单数据也会被清除。确定删除？"\n  onOk={...}\n>\n  <Button>删除</Button>\n</Confirm>\n')),(0,r.kt)("p",null,"具体效果如下："),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"confirm",src:n(73783).Z})),(0,r.kt)("h4",{id:"可用属性"},"可用属性"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"属性名"),(0,r.kt)("th",{parentName:"tr",align:null},"属性类型"),(0,r.kt)("th",{parentName:"tr",align:null},"默认值"),(0,r.kt)("th",{parentName:"tr",align:null},"描述"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"提示内容")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"children"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"React.ReactElement")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"子元素")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"width"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:null},"子元素实际宽度"),(0,r.kt)("td",{parentName:"tr",align:null},"弹窗宽度")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"height"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:null},"120"),(0,r.kt)("td",{parentName:"tr",align:null},"弹窗高度")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onClick"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"(event: React.MouseEvent<HTMLDivElement>) => void")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"点击事件的回调函数")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onOk"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"(...args: any[]) => void")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"确定按钮被点击时的回调函数")))),(0,r.kt)("h3",{id:"message"},"message"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"message"),"主要用于操作提示，比如",(0,r.kt)("inlineCode",{parentName:"p"},"加载中……"),"，",(0,r.kt)("inlineCode",{parentName:"p"},"操作成功"),"等。"),(0,r.kt)("p",null,"基本使用"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'function Demo() {\n  const handleClick = () => {\n    message.info("这是一条提示消息");\n  };\n\n  return <Button onClick={handleClick}>显示消息</Button>;\n}\n')),(0,r.kt)("h4",{id:"message-特性"},"message 特性"),(0,r.kt)("h5",{id:"message-支持不同类型的提示"},"message 支持不同类型的提示"),(0,r.kt)("p",null,"组件提供了一些静态方法，使用方式和参数可参考如下："),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"message.info(content,config)")," 信息提示")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"message.success(content,config)")," 成功提示")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"message.error(content,config)")," 错误提示")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"message.warning(content,config)")," 警告提示")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"message.loading(content,config)")," 加载中提示"))),(0,r.kt)("p",null,"参数解析："),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"参数名称"),(0,r.kt)("th",{parentName:"tr",align:null},"参数类型"),(0,r.kt)("th",{parentName:"tr",align:null},"说明"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"content"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"React.ReactNode")),(0,r.kt)("td",{parentName:"tr",align:null},"消息内容")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"number\\|{key:string,duration:number}")),(0,r.kt)("td",{parentName:"tr",align:null},"消息配置。如果是",(0,r.kt)("inlineCode",{parentName:"td"},"number"),"类型表示消息显示时长，以",(0,r.kt)("inlineCode",{parentName:"td"},"ms"),"为单位；当值为",(0,r.kt)("inlineCode",{parentName:"td"},"0"),"时，表示消息不会自动消失。也可以是消息配置，包括",(0,r.kt)("inlineCode",{parentName:"td"},"key"),"值和显示时长。")))),(0,r.kt)("h5",{id:"自定义-loading-关闭"},"自定义 loading 关闭"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"loading"),"一般用于资源加载中提示，加载完成才会消失。此时我们只需要在使用",(0,r.kt)("inlineCode",{parentName:"p"},"message.loading()"),"时，指定第二个参数为 0 即可保证",(0,r.kt)("inlineCode",{parentName:"p"},"loading"),"提示不会自动关闭。"),(0,r.kt)("p",null,"但在加载完成后一定要调用",(0,r.kt)("inlineCode",{parentName:"p"},"hide()"),"让其关闭。具体示例如下："),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'function save() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve("保存成功");\n    }, 1000);\n  });\n}\n\nfunction Demo() {\n  const handleClick = () => {\n    const hide = message.loading("数据正在提交，请稍后...", 0);\n    save()\n      .then(() => {\n        hide();\n        message.success("保存成功");\n      })\n      .catch((error) => {\n        hide();\n        message.error("保存失败");\n      });\n  };\n  return <Button onClick={handleClick}>保存</Button>;\n}\n')),(0,r.kt)("h5",{id:"设置消息显示时长"},"设置消息显示时长"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"message"),"相关提示 API 支持通过第二个参数自定义显示时长，默认为 3000 毫秒。"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'message.loading("数据加载中，1s后消失...", 1000);\n')),(0,r.kt)("h5",{id:"设置消息显示最大条数"},"设置消息显示最大条数"),(0,r.kt)("p",null,"消息显示最大条数默认为 10 条，可以使用",(0,r.kt)("inlineCode",{parentName:"p"},"message.config()"),"自定义最大条数。"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"message.config({ max: 20 });\n")),(0,r.kt)("h5",{id:"主题切换"},"主题切换"),(0,r.kt)("p",null,"使用",(0,r.kt)("inlineCode",{parentName:"p"},"message.setTheme(theme)"),"的方式切换主题。"),(0,r.kt)("h2",{id:"注册组件"},"注册组件"),(0,r.kt)("p",null,"组件开发完成后，可直接在 index.ts 文件中进行注册。"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/index.ts"',title:'"src/index.ts"'},'import AppSetting from "@sinoform/app-setting";\nimport message from "./plugins/message";\nimport Confirm from "./plugins/Confirm";\n\nAppSetting.globalUI = {\n  message,\n  Confirm,\n};\n')),(0,r.kt)("h2",{id:"组件验证"},"组件验证"),(0,r.kt)("p",null,"对于基础 UI 组件的验证，推荐直接在插件项目的 storybook 中直接验证。"))}s.isMDXComponent=!0},73783:function(e,t,n){t.Z=n.p+"assets/images/confirm-d5b58bce676ca508b68e3144ef53b4a4.png"}}]);