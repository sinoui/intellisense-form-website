"use strict";(self.webpackChunkintellisense_form_docs=self.webpackChunkintellisense_form_docs||[]).push([[4769],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var a=r.createContext({}),p=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(a.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,i=e.originalType,a=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),d=l,v=m["".concat(a,".").concat(d)]||m[d]||u[d]||i;return t?r.createElement(v,o(o({ref:n},c),{},{components:t})):r.createElement(v,o({ref:n},c))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s.mdxType="string"==typeof e?e:l,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},70610:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return a},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var r=t(87462),l=t(63366),i=(t(67294),t(3905)),o=["components"],s={id:"sinoform-sdk-event-rudiments",title:"入门教程"},a="入门教程",p={unversionedId:"sinoform-sdk-event-rudiments",id:"sinoform-sdk-event-rudiments",title:"入门教程",description:"环境准备",source:"@site/docs/sinoform-sdk-event-rudiments.md",sourceDirName:".",slug:"/sinoform-sdk-event-rudiments",permalink:"/intellisense-form-website/docs/sinoform-sdk-event-rudiments",tags:[],version:"current",frontMatter:{id:"sinoform-sdk-event-rudiments",title:"入门教程"},sidebar:"someSidebar",previous:{title:"开篇",permalink:"/intellisense-form-website/docs/sinoform-sdk-event-starter"},next:{title:"数据结构",permalink:"/intellisense-form-website/docs/sinoform-sdk-event-data"}},c=[{value:"环境准备",id:"环境准备",children:[],level:2},{value:"实例下载",id:"实例下载",children:[],level:2},{value:"初始化一个springboot项目",id:"初始化一个springboot项目",children:[],level:2},{value:"开发第一个事件订阅方法",id:"开发第一个事件订阅方法",children:[{value:"引入sinoform-sdk.jar工具包。",id:"引入sinoform-sdkjar工具包",children:[],level:3},{value:"配置application.yml",id:"配置applicationyml",children:[],level:3},{value:"创建事件订阅类",id:"创建事件订阅类",children:[],level:3},{value:"启动项目",id:"启动项目",children:[],level:3},{value:"测试事件发布",id:"测试事件发布",children:[],level:3}],level:2},{value:"订阅多个事件实例",id:"订阅多个事件实例",children:[{value:"创建事件订阅类",id:"创建事件订阅类-1",children:[],level:3},{value:"启动项目",id:"启动项目-1",children:[],level:3},{value:"测试事件发布",id:"测试事件发布-1",children:[],level:3},{value:"总结",id:"总结",children:[],level:3}],level:2},{value:"多个智能表单服务的订阅实例",id:"多个智能表单服务的订阅实例",children:[{value:"配置application.yml",id:"配置applicationyml-1",children:[],level:3},{value:"启动项目",id:"启动项目-2",children:[],level:3},{value:"总结",id:"总结-1",children:[],level:3}],level:2},{value:"同组订阅实例",id:"同组订阅实例",children:[{value:"配置application.yml",id:"配置applicationyml-2",children:[],level:3},{value:"启动项目",id:"启动项目-3",children:[],level:3},{value:"修改application.yml",id:"修改applicationyml",children:[],level:3},{value:"启动项目",id:"启动项目-4",children:[],level:3},{value:"测试事件发布",id:"测试事件发布-2",children:[],level:3},{value:"总结",id:"总结-2",children:[],level:3}],level:2},{value:"多组订阅实例",id:"多组订阅实例",children:[{value:"修改application.yml",id:"修改applicationyml-1",children:[],level:3},{value:"启动项目",id:"启动项目-5",children:[],level:3},{value:"修改application.yml",id:"修改applicationyml-2",children:[],level:3},{value:"启动项目",id:"启动项目-6",children:[],level:3},{value:"测试事件发布",id:"测试事件发布-3",children:[],level:3},{value:"总结",id:"总结-3",children:[],level:3}],level:2}],u={toc:c};function m(e){var n=e.components,s=(0,l.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,s,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"入门教程"},"入门教程"),(0,i.kt)("h2",{id:"环境准备"},"环境准备"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"jdk1.8 +"),(0,i.kt)("li",{parentName:"ul"},"idea企业版"),(0,i.kt)("li",{parentName:"ul"},"maven"),(0,i.kt)("li",{parentName:"ul"},"postman - 测试用")),(0,i.kt)("h2",{id:"实例下载"},"实例下载"),(0,i.kt)("p",null,"以下教程的springboot项目：",(0,i.kt)("a",{parentName:"p",href:"https://gitee.com/sinoui/sinoform-plugin.git"},"https://gitee.com/sinoui/sinoform-plugin.git")),(0,i.kt)("h2",{id:"初始化一个springboot项目"},"初始化一个springboot项目"),(0,i.kt)("p",null,"如果已有springboot项目，跳过该步骤。"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"打开idea，新建springboot项目")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"idea新建springboot项目-1",src:t(21655).Z})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"idea新建springboot项目-2",src:t(61906).Z})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"idea新建springboot项目-3",src:t(70101).Z})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"idea新建springboot项目-4",src:t(47872).Z})),(0,i.kt)("h2",{id:"开发第一个事件订阅方法"},"开发第一个事件订阅方法"),(0,i.kt)("h3",{id:"引入sinoform-sdkjar工具包"},"引入sinoform-sdk.jar工具包。"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>com.sinosoft</groupId>\n    <artifactId>sinoform-sdk</artifactId>\n    <version>1.12.0</version>\n</dependency>\n<repositories>\n    <repository>\n        <id>sinoform</id>\n        <name>nexus repository</name>\n        <url>http://47.93.34.153/repository/sinoform-group/</url>\n        <releases>\n            <enabled>true</enabled>\n        </releases>\n        <snapshots>\n            <enabled>false</enabled>\n        </snapshots>\n    </repository>\n</repositories>\n")),(0,i.kt)("h3",{id:"配置applicationyml"},"配置application.yml"),(0,i.kt)("p",null,"在springboot核心配置文件application.yml中增加以下配置信息："),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"server:\n  port: 8081\nsinoform:\n  event:\n    server:\n      #智能表单服务的ip和端口，用于向服务端订阅事件，可配置多个，端口需要与ip地址一一对应\n      ip:\n        - 192.168.90.44\n      port:\n        - 8080\n    client:\n      #当前项目的分组，可自定义分组名称，同一分组多个项目若订阅了相同的事件，那么只会发布给其中一个项目\n      group: meeting\n      #当前项目服务的端口，可选配置项，用于接收智能表单发布的事件，默认为server.port\n      port: 8081\n")),(0,i.kt)("h3",{id:"创建事件订阅类"},"创建事件订阅类"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"订阅类需要加@Compment注解，订阅类也可以是service或controller类"),(0,i.kt)("li",{parentName:"ul"},"事件订阅方法需要加@RemoteEventSubscribe注解"),(0,i.kt)("li",{parentName:"ul"},"事件订阅方法参数为需要监听的事件对象，只能有一个参数"),(0,i.kt)("li",{parentName:"ul"},"目前支持两种事件的订阅FlowEndEvent和FlowSendEvent"),(0,i.kt)("li",{parentName:"ul"},"代码如下：")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'package com.sinosoft.plugin.sinosoftplugin;\n\nimport com.sinosoft.sdk.annotation.RemoteEventSubscribe;\nimport com.sinosoft.sdk.event.FlowEndEvent;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class FirstSubscriber {\n\n    @RemoteEventSubscribe\n    public void helloEvent(FlowEndEvent event) {\n        System.out.println("Hello event : " + event.toString());\n    }\n}\n\n')),(0,i.kt)("h3",{id:"启动项目"},"启动项目"),(0,i.kt)("p",null,"启动项目，可以看到以下输出，说明已经订阅了智能表单服务的事件，其中/sinoform/client/apis/post是默认的当前项目的发布接口，sinoform-sdk会根据接收到的事件信息自动转换事件对象，并调用订阅了该事件的方法。"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'智能表单服务地址 : [http://192.168.90.44:8080/sinoform/server/apis/registerEventListener]\n当前项目的事件发布URL : /sinoform/client/apis/post\n订阅事件数量 : 3\n订阅事件列表 : \n        com.sinosoft.plugin.sinosoftplugin.FirstSubscriber.helloEvent(com.sinosoft.sdk.event.FlowEndEvent)\n开始订阅 : \n        订阅请求：{"eventListeners":......}\n        向智能表单服务 http://192.168.90.44:8080/sinoform/server/apis/registerEventListener 订阅成功. ok\n\n')),(0,i.kt)("h2",{id:"测试事件发布"}),(0,i.kt)("h3",{id:"测试事件发布"},"测试事件发布"),(0,i.kt)("p",null,"智能表单服务端提供了测试接口，使用postman调用测试接口进行事件发布的测试"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"测试接口 ： ",(0,i.kt)("a",{parentName:"li",href:"http://192.168.90.44:8080/sinoform/server/apis/testPostEvent"},"http://192.168.90.44:8080/sinoform/server/apis/testPostEvent")),(0,i.kt)("li",{parentName:"ul"},"请求类型 ： post"),(0,i.kt)("li",{parentName:"ul"},"body格式 ：form-data"),(0,i.kt)("li",{parentName:"ul"},"接口参数 ： key : eventName     value(事件对象的包名+类名) : com.sinosoft.sdk.event.FlowEndEvent"),(0,i.kt)("li",{parentName:"ul"},"如下图：")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"postman调用事件发布接口",src:t(81473).Z})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"查看idea控制台输出，如下：")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Hello event : WorkFlowEvent(......)\n")),(0,i.kt)("h2",{id:"订阅多个事件实例"},"订阅多个事件实例"),(0,i.kt)("h3",{id:"创建事件订阅类-1"},"创建事件订阅类"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"在同一个类中添加多个订阅方法，代码如下："),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},'package com.sinosoft.plugin.sinosoftplugin;\n\nimport com.sinosoft.sdk.annotation.RemoteEventSubscribe;\nimport com.sinosoft.sdk.event.FlowEndEvent;\nimport com.sinosoft.sdk.event.FlowSendEvent;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class ManySubscriber {\n\n    @RemoteEventSubscribe\n    public void helloFlowSendEvent(FlowSendEvent event) {\n        System.out.println("Test 1 : Hello FlowSendEvent : " + event);\n    }\n\n    @RemoteEventSubscribe\n    public void helloFlowEndEvent(FlowEndEvent event) {\n        System.out.println("Test 2 :Hello FlowEndEvent : " + event);\n    }\n}\n\n')))),(0,i.kt)("h3",{id:"启动项目-1"},"启动项目"),(0,i.kt)("p",null,"启动项目，可以看到以下输出，订阅事件列表中有三条记录，在FirstSubscriber类中找到了一个订阅方法，在ManySubscriber中找到了两个订阅方法，并订阅成功。"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'智能表单服务地址 : [http://192.168.90.44:8080/sinoform/server/apis/registerEventListener]\n当前项目的事件发布URL : /sinoform/client/apis/post\n订阅事件数量 : 3\n订阅事件列表 : \n        com.sinosoft.plugin.sinosoftplugin.FirstSubscriber.helloEvent(com.sinosoft.sdk.event.FlowEndEvent)\n        com.sinosoft.plugin.sinosoftplugin.ManySubscriber.helloFlowEndEvent(com.sinosoft.sdk.event.FlowEndEvent)\n        com.sinosoft.plugin.sinosoftplugin.ManySubscriber.helloFlowSendEvent(com.sinosoft.sdk.event.FlowSendEvent)\n开始订阅 : \n        订阅请求：{"eventListeners":......}\n        向智能表单服务 http://192.168.90.44:8080/sinoform/server/apis/registerEventListener 订阅成功. ok\n')),(0,i.kt)("h3",{id:"测试事件发布-1"},"测试事件发布"),(0,i.kt)("p",null,"使用postman调用测试事件发布接口，分别发布事件com.sinosoft.sdk.event.FlowEndEvent 和 com.sinosoft.sdk.event.FlowSendEvent，查看当前项目输出。（",(0,i.kt)("a",{parentName:"p",href:"#%E6%B5%8B%E8%AF%95%E4%BA%8B%E4%BB%B6%E5%8F%91%E5%B8%83"},"测试接口调用说明"),"）"),(0,i.kt)("p",null,"发布FlowSendEvent的输出为："),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Test 1 : Hello FlowSendEvent : WorkFlowEvent(...)\n")),(0,i.kt)("p",null,"发布FlowEndEvent的输出为："),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Hello event : WorkFlowEvent(...)\nTest 2 : Hello FlowEndEvent : WorkFlowEvent(...)\n")),(0,i.kt)("h3",{id:"总结"},"总结"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"在sinoform-sdk提供的订阅机制中，订阅方法可以有多个，这些订阅方法可以在相同的类中，也可以在不同的类中。")),(0,i.kt)("h2",{id:"多个智能表单服务的订阅实例"},"多个智能表单服务的订阅实例"),(0,i.kt)("h3",{id:"配置applicationyml-1"},"配置application.yml"),(0,i.kt)("p",null,"在sinoform.event.server.ip中配置多个ip地址，其中实际可用的ip为121.30.232.162，配置如下："),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"server:\n  port: 8081\nsinoform:\n  event:\n    server:\n      #智能表单服务的ip和端口，用于向服务端订阅事件，可配置多个，端口需要与ip地址一一对应\n      ip:\n        - 10.200.100.1\n        - 10.200.100.2\n        - 192.168.90.44\n        - 10.200.100.3\n        - 10.200.100.4\n      port:\n        - 8080\n    client:\n      #当前项目的分组，可自定义分组名称，同一分组多个项目若订阅了相同的事件，那么只会发布给其中一个项目\n      group: meeting\n      #当前项目服务的端口，可选配置项，用于接收智能表单发布的事件，默认为server.port\n      port: 8081\n")),(0,i.kt)("h3",{id:"启动项目-2"},"启动项目"),(0,i.kt)("p",null,"启动项目，可以看到以下输出，在订阅失败后，会依次尝试向其他的智能表单服务订阅，直到订阅成功。"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'智能表单服务地址 : [http://10.200.100.1:8080/sinoform/server/apis/registerEventListener, http://10.200.100.2:8080/sinoform/server/apis/registerEventListener, http://192.168.90.44:8080/sinoform/server/apis/registerEventListener, http://10.200.100.3:8080/sinoform/server/apis/registerEventListener, http://10.200.100.34:8080/sinoform/server/apis/registerEventListener]\n当前项目的事件发布URL : /sinoform/client/apis/post\n订阅事件数量 : 3\n订阅事件列表 : \n        com.sinosoft.plugin.sinosoftplugin.FirstSubscriber.helloEvent(com.sinosoft.sdk.event.FlowEndEvent)\n        com.sinosoft.plugin.sinosoftplugin.ManySubscriber.helloFlowSendEvent(com.sinosoft.sdk.event.FlowSendEvent)\n        com.sinosoft.plugin.sinosoftplugin.ManySubscriber.helloFlowEndEvent(com.sinosoft.sdk.event.FlowEndEvent)\n开始订阅 : \n        订阅请求：{"eventListeners":...}\n        向智能表单服务 http://10.200.100.1:8080/sinoform/server/apis/registerEventListener 订阅失败. 错误信息：Connection timed out: connect\n        向智能表单服务 http://10.200.100.2:8080/sinoform/server/apis/registerEventListener 订阅失败. 错误信息：Connection timed out: connect\n        向智能表单服务 http://192.168.90.44:8080/sinoform/server/apis/registerEventListener 订阅成功. ok\n')),(0,i.kt)("h3",{id:"总结-1"},"总结"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"当存在多个智能表单服务时，为了确保可以成功订阅事件，需要将所有智能表单服务的ip配置到sinoform.event.server.ip中，在项目启动时，sinoform-sdk会按配置ip地址的先后顺序，依次尝试订阅事件，直到订阅成功为止。")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"当智能表单服务需要停止或重启时，只需要保证有一个智能表单服务启动就不会影响应用程序的事件订阅。"))),(0,i.kt)("h2",{id:"同组订阅实例"}),(0,i.kt)("h2",{id:"同组订阅实例"},"同组订阅实例"),(0,i.kt)("h3",{id:"配置applicationyml-2"},"配置application.yml"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"server:\n  port: 8081\nsinoform:\n  event:\n    server:\n      #智能表单服务的ip和端口，用于向服务端订阅事件，可配置多个，端口需要与ip地址一一对应\n      ip:\n        - 192.168.90.44\n      port:\n        - 8080\n    client:\n      #当前项目的分组，可自定义分组名称，同一分组多个项目若订阅了相同的事件，那么只会发布给其中一个项目\n      group: meeting\n      #当前项目服务的端口，可选配置项，用于接收智能表单发布的事件，默认为server.port\n      port: 8081\n")),(0,i.kt)("h3",{id:"启动项目-3"},"启动项目"),(0,i.kt)("p",null,"启动项目"),(0,i.kt)("h3",{id:"修改applicationyml"},"修改application.yml"),(0,i.kt)("p",null,"修改项目端口配置："),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"server:\n  port: 8082\nsinoform:\n  event:\n    server:\n      #智能表单服务的ip和端口，用于向服务端订阅事件，可配置多个，端口需要与ip地址一一对应\n      ip:\n        - 192.168.90.44\n      port:\n        - 8080\n    client:\n      #当前项目的分组，可自定义分组名称，同一分组多个项目若订阅了相同的事件，那么只会发布给其中一个项目\n      group: meeting\n      #当前项目服务的端口，可选配置项，用于接收智能表单发布的事件，默认为server.port\n      port: 8082\n")),(0,i.kt)("h3",{id:"启动项目-4"},"启动项目"),(0,i.kt)("p",null,"再次启动项目，此时我们已经启动了两个项目，且端口分别为8081和8082"),(0,i.kt)("h3",{id:"测试事件发布-2"},"测试事件发布"),(0,i.kt)("p",null,"使用postman调用测试事件发布接口，发布事件com.sinosoft.sdk.event.FlowEndEvent，查看当前项目输出。（",(0,i.kt)("a",{parentName:"p",href:"#%E6%B5%8B%E8%AF%95%E4%BA%8B%E4%BB%B6%E5%8F%91%E5%B8%83"},"测试接口调用说明"),"）"),(0,i.kt)("p",null,"可以看到8081端口的项目收到了事件信息："),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"test-result-1",src:t(65453).Z})),(0,i.kt)("p",null,"8082端口的项目没有收到事件信息："),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"test-result-2",src:t(36431).Z})),(0,i.kt)("h3",{id:"总结-2"},"总结"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"同一分组的多个项目，若订阅了相同的事件，智能表单服务只会向其中一个项目发布事件。")),(0,i.kt)("h2",{id:"多组订阅实例"},"多组订阅实例"),(0,i.kt)("h3",{id:"修改applicationyml-1"},"修改application.yml"),(0,i.kt)("p",null,"在",(0,i.kt)("a",{parentName:"p",href:"#%E5%90%8C%E7%BB%84%E8%AE%A2%E9%98%85%E5%AE%9E%E4%BE%8B"},"同组订阅实例"),"的基础上,不要停止项目，再次修改配置，修改当前项目application.yml中的端口信息和分组信息："),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"server:\n  port: 8083\nsinoform:\n  event:\n    server:\n      #智能表单服务的ip和端口，用于向服务端订阅事件，可配置多个，端口需要与ip地址一一对应\n      ip:\n        - 192.168.90.44\n      port:\n        - 8080\n    client:\n      #当前项目的分组，可自定义分组名称，同一分组多个项目若订阅了相同的事件，那么只会发布给其中一个项目\n      group: email\n      #当前项目服务的端口，可选配置项，用于接收智能表单发布的事件，默认为server.port\n      port: 8083\n")),(0,i.kt)("h3",{id:"启动项目-5"},"启动项目"),(0,i.kt)("p",null,"启动项目"),(0,i.kt)("h3",{id:"修改applicationyml-2"},"修改application.yml"),(0,i.kt)("p",null,"再次修改配置，将当前项目application.yml中的端口信息："),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"server:\n  port: 8084\nsinoform:\n  event:\n    server:\n      #智能表单服务的ip和端口，用于向服务端订阅事件，可配置多个，端口需要与ip地址一一对应\n      ip:\n        - 192.168.90.44\n      port:\n        - 8080\n    client:\n      #当前项目的分组，可自定义分组名称，同一分组多个项目若订阅了相同的事件，那么只会发布给其中一个项目\n      group: email\n      #当前项目服务的端口，可选配置项，用于接收智能表单发布的事件，默认为server.port\n      port: 8084\n")),(0,i.kt)("h3",{id:"启动项目-6"},"启动项目"),(0,i.kt)("p",null,"再次启动项目，此时我们已经启动了4个项目，且端口分别为8081、8082、8083、8084，其前两次启动配置的8081、8082端口都属于meeting组，而8083、8084属于email组。"),(0,i.kt)("h3",{id:"测试事件发布-3"},"测试事件发布"),(0,i.kt)("p",null,"使用postman调用测试事件发布接口，发布事件com.sinosoft.sdk.event.FlowEndEvent，查看当前项目输出。（",(0,i.kt)("a",{parentName:"p",href:"#%E6%B5%8B%E8%AF%95%E4%BA%8B%E4%BB%B6%E5%8F%91%E5%B8%83"},"测试接口调用说明"),"）"),(0,i.kt)("p",null,"可以看到8081端口的项目收到了事件信息，属于meeting分组"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"test-result-3",src:t(42926).Z})),(0,i.kt)("p",null,"8082端口的项目没有收到事件信息，属于meeting分组"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"test-result-4",src:t(39236).Z})),(0,i.kt)("p",null,"8083端口的项目收到了事件信息，属于email分组"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"test-result-5",src:t(70612).Z})),(0,i.kt)("p",null,"8084端口的项目没有收到事件信息，属于email分组"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"test-result-6",src:t(96672).Z})),(0,i.kt)("h3",{id:"总结-3"},"总结"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"存在多个分组时，智能表单服务会在每个组中选择一个项目进行事件发布。")))}m.isMDXComponent=!0},21655:function(e,n,t){n.Z=t.p+"assets/images/create-springboot-project-1-2bc9c179d5c89dd5ee5926b9cd5d9d46.jpg"},61906:function(e,n,t){n.Z=t.p+"assets/images/create-springboot-project-2-ee165c4b46c0b07cbc777152b8d61ffc.jpg"},70101:function(e,n,t){n.Z=t.p+"assets/images/create-springboot-project-3-542dabc794fdccc94b66abce4e81fb03.jpg"},47872:function(e,n,t){n.Z=t.p+"assets/images/create-springboot-project-4-fb4be762f3eaf14673f5c7dacddcc720.jpg"},81473:function(e,n,t){n.Z=t.p+"assets/images/postman-post-event-cf363a87b4950300d9374c8fb8f4b30a.jpg"},65453:function(e,n,t){n.Z=t.p+"assets/images/test-result-1-6a589077f079346304f76138ee04361c.png"},36431:function(e,n,t){n.Z=t.p+"assets/images/test-result-2-578ab444571d9c7a66e227a314690170.png"},42926:function(e,n,t){n.Z=t.p+"assets/images/test-result-3-32dbe382cd926a2144ec6380c278352f.png"},39236:function(e,n,t){n.Z=t.p+"assets/images/test-result-4-11adfdf47072ee324cf7a3a00cfcd417.png"},70612:function(e,n,t){n.Z=t.p+"assets/images/test-result-5-ee874d619b0d3fdd3f8b17176051f58a.png"},96672:function(e,n,t){n.Z=t.p+"assets/images/test-result-6-c5f3d793b5627ee07622f85736c1ccfc.png"}}]);