"use strict";(self.webpackChunkintellisense_form_docs=self.webpackChunkintellisense_form_docs||[]).push([[7475],{3905:function(e,r,n){n.d(r,{Zo:function(){return l},kt:function(){return f}});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),p=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},l=function(e){var r=p(e.components);return t.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=p(n),f=o,g=m["".concat(c,".").concat(f)]||m[f]||u[f]||i;return n?t.createElement(g,a(a({ref:r},l),{},{components:n})):t.createElement(g,a({ref:r},l))}));function f(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},12072:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return m}});var t=n(87462),o=n(63366),i=(n(67294),n(3905)),a=["components"],s={id:"config-version",title:"查看产品版本"},c=void 0,p={unversionedId:"config-version",id:"config-version",title:"查看产品版本",description:"从智能表单 v1.11.0 版本开始，项目组可以查看部署的智能表单产品的版本号。智能表单产品由前后端两部分组成，前后端的版本在小版本可能会不一致。下面分别介绍如何查看各端版本号。",source:"@site/docs/config-version.md",sourceDirName:".",slug:"/config-version",permalink:"/intellisense-form-website/docs/config-version",tags:[],version:"current",frontMatter:{id:"config-version",title:"查看产品版本"},sidebar:"someSidebar",previous:{title:"系统管理日志功能集成",permalink:"/intellisense-form-website/docs/config-audit"},next:{title:"外部配置",permalink:"/intellisense-form-website/docs/config-external-intro"}},l=[{value:"查看前端版本号",id:"查看前端版本号",children:[],level:2},{value:"查看后端版本号",id:"查看后端版本号",children:[],level:2}],u={toc:l};function m(e){var r=e.components,s=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},u,s,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"从智能表单 v1.11.0 版本开始，项目组可以查看部署的智能表单产品的版本号。智能表单产品由前后端两部分组成，前后端的版本在小版本可能会不一致。下面分别介绍如何查看各端版本号。"),(0,i.kt)("h2",{id:"查看前端版本号"},"查看前端版本号"),(0,i.kt)("p",null,"打开表单设计器首页，在页面的左上角显示了前端版本号："),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"查看前端版本号",src:n(29996).Z})),(0,i.kt)("p",null,"或者打开浏览器的控制台，控制台会有当前版本号，如下所示："),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"从控制台查看版本号",src:n(44842).Z})),(0,i.kt)("h2",{id:"查看后端版本号"},"查看后端版本号"),(0,i.kt)("p",null,"在浏览器打开下面的链接，即可查看后端版本号："),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-http"},"GET http://[智能表单服务的地址]/apis/intellisense-form/app-config\n")),(0,i.kt)("p",null,"返回如下信息："),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"{2}","{2}":!0},'{\n  "version": "1.11.0",\n  "disableMobile": false,\n  "disableDashboard": false,\n  "disableApplication": false,\n  "disableFlowForm": false,\n  "disableResourceSync": false,\n  "disableRole": false,\n  "disableDept": false,\n  "disableApplicationRole": false,\n  "enableAuthInterceptor": false,\n  "workflowDesignServerUri": "192.168.80.142:8080",\n  "workflowServerUri": "192.168.80.142:18003",\n  "uiasServerUri": "192.168.80.142:18001",\n  "buildInfo": {\n    "group": "com.sinosoft",\n    "artifact": "intellisenseform-core",\n    "name": "intellisenseform-core",\n    "version": "1.11.0",\n    "time": "2021-08-13T07:55:48.005Z"\n  }\n}\n')),(0,i.kt)("p",null,"其中 ",(0,i.kt)("inlineCode",{parentName:"p"},"version")," 就是后端的版本号。"),(0,i.kt)("p",null,"在启动后端项目时，项目启动日志中也会出现产品版本号，如下所示（搜索“智能表单”可快速定位到日志中的位置）："),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-log",metastring:"{43}","{43}":!0},"  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::        (v2.1.9.RELEASE)\n\n2021-08-13 16:23:49.813  INFO 12456 --- [           main] com.sinosoft.bff.BffApplication          : Starting BffApplication on DESKTOP-JKNGAKO with PID 12456 (D:\\workspaces\\sino-intellisense-form-java\\intellisenseform-bff\\target\\classes started by jacki in D:\\workspaces\\sino-intellisense-form-java)\n2021-08-13 16:23:49.819  INFO 12456 --- [           main] com.sinosoft.bff.BffApplication          : The following profiles are active: dev\n2021-08-13 16:23:51.839  INFO 12456 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!\n2021-08-13 16:23:51.840  INFO 12456 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.\n2021-08-13 16:23:52.021  INFO 12456 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 169ms. Found 19 repository interfaces.\n2021-08-13 16:23:52.503  INFO 12456 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!\n2021-08-13 16:23:52.503  INFO 12456 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.\n2021-08-13 16:23:52.566  INFO 12456 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 63ms. Found 0 repository interfaces.\n2021-08-13 16:23:53.065  INFO 12456 --- [           main] ptablePropertiesBeanFactoryPostProcessor : Post-processing PropertySource instances\n2021-08-13 16:23:53.126  INFO 12456 --- [           main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy\n2021-08-13 16:23:53.127  INFO 12456 --- [           main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper\n2021-08-13 16:23:53.128  INFO 12456 --- [           main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper\n2021-08-13 16:23:53.128  INFO 12456 --- [           main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper\n2021-08-13 16:23:53.130  INFO 12456 --- [           main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper\n2021-08-13 16:23:53.130  INFO 12456 --- [           main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper\n2021-08-13 16:23:53.130  INFO 12456 --- [           main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource applicationConfig: [classpath:/application-dev.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper\n2021-08-13 16:23:53.130  INFO 12456 --- [           main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper\n2021-08-13 16:23:53.261  INFO 12456 --- [           main] c.u.j.filter.DefaultLazyPropertyFilter   : Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter\n2021-08-13 16:23:53.455  INFO 12456 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$92640269] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\n2021-08-13 16:23:53.788  INFO 12456 --- [           main] c.u.j.r.DefaultLazyPropertyResolver      : Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver\n2021-08-13 16:23:53.791  INFO 12456 --- [           main] c.u.j.d.DefaultLazyPropertyDetector      : Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector\n2021-08-13 16:23:54.247  INFO 12456 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)\n2021-08-13 16:23:54.294  INFO 12456 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n2021-08-13 16:23:54.294  INFO 12456 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.26]\n2021-08-13 16:23:54.596  INFO 12456 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\n2021-08-13 16:23:54.596  INFO 12456 --- [           main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4683 ms\n2021-08-13 16:23:56.588  INFO 12456 --- [           main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[192.168.80.142:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}\n2021-08-13 16:23:56.886  WARN 12456 --- [           main] o.s.data.convert.CustomConversions       : Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.\n2021-08-13 16:23:56.886  WARN 12456 --- [           main] o.s.data.convert.CustomConversions       : Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.\n2021-08-13 16:23:56.895  WARN 12456 --- [           main] o.s.data.convert.CustomConversions       : Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.\n2021-08-13 16:23:56.895  WARN 12456 --- [           main] o.s.data.convert.CustomConversions       : Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.\n\n\n\n智能表单 1.11.0\n\n\n\n2021-08-13 16:23:57.950  INFO 12456 --- [           main] m.c.i.MongoPersistentEntityIndexResolver : Found cycle for field '_id' in type 'FormMenu' for path 'resources -> resources'\n2021-08-13 16:23:57.951  INFO 12456 --- [           main] m.c.i.MongoPersistentEntityIndexResolver : Found cycle for field 'resources' in type 'FormMenu' for path 'resources -> resources'\n2021-08-13 16:23:58.051  INFO 12456 --- [           main] m.c.i.MongoPersistentEntityIndexResolver : Found cycle for field '_id' in type 'ApplicationResourceModel' for path 'children -> children'\n")))}m.isMDXComponent=!0},29996:function(e,r,n){r.Z=n.p+"assets/images/find-front-end-version-8e66106c45549ef920c27603257de443.png"},44842:function(e,r,n){r.Z=n.p+"assets/images/find-version-from-console-a0cc1768dbeb24d84593073a930e981a.png"}}]);